{
  "name": "fh-logger",
  "description": "Enables a simple way of configuring and creating loggers, configured with request serializers, including clustering information.",
  "version": "0.5.0",
  "repository": {
    "type": "git",
    "url": "git://github.com/feedhenry/fh-logger.git"
  },
  "author": {
    "name": "Red Hat"
  },
  "license": "Apache-2.0",
  "main": "./lib/fh_logger.js",
  "engines": {
    "node": ">=0.8"
  },
  "scripts": {
    "test": "grunt eslint fh-test",
    "version": "sed -i.bak \"s/sonar.projectVersion=.*/sonar.projectVersion=${npm_package_version}/\" sonar-project.properties && rm sonar-project.properties.bak && git add sonar-project.properties"
  },
  "dependencies": {
    "bunyan": "^1.5.1",
    "continuation-local-storage": "^3.1.7",
    "node-uuid": "^1.4.7"
  },
  "devDependencies": {
    "chai": "^3.3.0",
    "eslint": "^2.7.0",
    "grunt": "^1.0.1",
    "grunt-fh-build": "^1.0.1",
    "grunt-mocha": "^1.0.1",
    "grunt-mocha-istanbul": "^4.0.2",
    "grunt-mocha-test": "^0.12.7",
    "istanbul": "^0.4.3",
    "mocha": "^2.4.5",
    "rewire": "^2.3.4"
  },
  "readme": "## fh-logger\nEnables a simple way of configuring and creating [Bunyan](https://github.com/trentm/node-bunyan) loggers, configured with request serializers, including clustering information. \n\n### Install\n```shell\nnpm install fh-logger\n```\n\n### Usage\n\n\n#### JavaScript object configuration  \n\n```javascript\nvar fh_logger = require('fh-logger');\nvar logger = fh_logger.createLogger({name: 'first'});\n```\nThis will produce a Bunyan logger that will have a request serializer, and will log to ```process.stdout```.\n\n\n#### String configuration\nYou can pass in a JSON string containing your logger configuration. This is useful if you define your logger configuration externally to your code, for example in a .json file:  \n\n```json\n{\n  \"name\": \"testing\",\n  \"streams\": [{\n    \"type\": \"file\",\n    \"stream\": \"file\",\n    \"path\": \"/path/to/testing.log\",\n    \"level\": \"info\"\n  }, {\n    \"type\": \"stream\",\n    \"src\": true,\n    \"level\": \"trace\",\n    \"stream\": \"process.stdout\"\n  }, {\n    \"type\": \"raw\",\n    \"src\": true,\n    \"level\": \"trace\"\n  }]\n}\n```\nCreate the logger passing in the string configuration read from the above file:\n\n```javascript\nvar fh_logger = require(\"fh-logger\");\nvar logger = fh_logger.createLogger(stringConfig);\n```\n\n### Testing\nTo run all the tests:\n\n```shell\ngrunt mochaTest\n```\n\n#### Request Id logging\n`fh-loggger` also exports express-compatible middleware to generate unique requestId and automatically include it in logging methods.\n\n```\nvar fh_logger = require('fh-logger');\n\n// must be called to setup the middleware\nvar logger = fh_logger.createLogger({\n  name: 'first',\n  requestIdHeader: 'X-SOME-HTTP-HEADER'\n});\napp.use(logger.requestIdMiddleware);\napp.get('/', function(req, res) {\n  console.log(req.requestId); // uuid\n  console.log(logger.requestId); // uuid\n  logger.info('some message'); // -> {msg: 'some message', requestId: 'some-uuid'}\n  logger.info(logger.requestIdHeader) // -> {msg: 'X-SOME-HTTP-HEADER', requestId: 'some-uuid'}\n})\n```\n\nBy default it utilizes the 'X-FH-REQUEST-ID' header, this can be overridden by the configuration passed to `createLogger` as shown above\n\n##### ensureRequestId\n\nFor logging inside callbacks that are supposed to display the `requestId` but for some reason do not, utilize the exported `ensureRequestId({Function})`:\n\n```\nlogger.ensureRequestId(function asyncOperation(err, data){\n  logger.error(err); // -> {req.reqId: 'some-uuid'}\n});\n```\n\nFor more information refer to the [continuation-local-storage module docs](https://github.com/othiym23/node-continuation-local-storage#namespacebindcallback-context)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/feedhenry/fh-logger/issues"
  },
  "homepage": "https://github.com/feedhenry/fh-logger",
  "_id": "fh-logger@0.5.0",
  "_shasum": "f52d3a7c13586206fa4d63202c08460f214b0932",
  "_from": "https://registry.npmjs.org/fh-logger/-/fh-logger-0.5.0.tgz",
  "_resolved": "https://registry.npmjs.org/fh-logger/-/fh-logger-0.5.0.tgz"
}
